Version 4.0 HI-TECH Software Intermediate Code
"1478 C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc\pic18f4520.h
[v _TRISA `Vuc ~T0 @X0 0 e@3986 ]
"1700
[v _TRISB `Vuc ~T0 @X0 0 e@3987 ]
"1922
[v _TRISC `Vuc ~T0 @X0 0 e@3988 ]
"2144
[v _TRISD `Vuc ~T0 @X0 0 e@3989 ]
"2366
[v _TRISE `Vuc ~T0 @X0 0 e@3990 ]
"978
[v _LATA `Vuc ~T0 @X0 0 e@3977 ]
"1090
[v _LATB `Vuc ~T0 @X0 0 e@3978 ]
"1202
[v _LATC `Vuc ~T0 @X0 0 e@3979 ]
"1314
[v _LATD `Vuc ~T0 @X0 0 e@3980 ]
"1426
[v _LATE `Vuc ~T0 @X0 0 e@3981 ]
"53
[v _PORTA `Vuc ~T0 @X0 0 e@3968 ]
"272
[v _PORTB `Vuc ~T0 @X0 0 e@3969 ]
"451
[v _PORTC `Vuc ~T0 @X0 0 e@3970 ]
"633
[v _PORTD `Vuc ~T0 @X0 0 e@3971 ]
"775
[v _PORTE `Vuc ~T0 @X0 0 e@3972 ]
"60 mcal_layer/gpio_layer/hal_gpio.h
[; ;mcal_layer/gpio_layer/hal_gpio.h: 60: typedef struct {
[s S283 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S283 . port pin direction logic ]
"25 mcal_layer/gpio_layer/hal_gpio.c
[; ;mcal_layer/gpio_layer/hal_gpio.c: 25:     }
[c E2891 0 1 .. ]
[n E2891 . output input  ]
"58
[; ;mcal_layer/gpio_layer/hal_gpio.c: 58: STD_ReturnType gpio_pin_write_logic(const pin_config_t *_pin_config,logic_t logic){
[c E2887 0 1 .. ]
[n E2887 . low high  ]
"138
[; ;mcal_layer/gpio_layer/hal_gpio.c: 138: STD_ReturnType gpio_port_direction_intialize(port_index_t port,uint8 direction){
[c E2905 0 1 2 3 4 .. ]
[n E2905 . PORTA_INDEX PORTB_INDEX PORTC_INDEX PORTD_INDEX PORTE_INDEX  ]
"55 C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc\pic18f4520.h
[; <" PORTA equ 0F80h ;# ">
"274
[; <" PORTB equ 0F81h ;# ">
"453
[; <" PORTC equ 0F82h ;# ">
"635
[; <" PORTD equ 0F83h ;# ">
"777
[; <" PORTE equ 0F84h ;# ">
"980
[; <" LATA equ 0F89h ;# ">
"1092
[; <" LATB equ 0F8Ah ;# ">
"1204
[; <" LATC equ 0F8Bh ;# ">
"1316
[; <" LATD equ 0F8Ch ;# ">
"1428
[; <" LATE equ 0F8Dh ;# ">
"1480
[; <" TRISA equ 0F92h ;# ">
"1485
[; <" DDRA equ 0F92h ;# ">
"1702
[; <" TRISB equ 0F93h ;# ">
"1707
[; <" DDRB equ 0F93h ;# ">
"1924
[; <" TRISC equ 0F94h ;# ">
"1929
[; <" DDRC equ 0F94h ;# ">
"2146
[; <" TRISD equ 0F95h ;# ">
"2151
[; <" DDRD equ 0F95h ;# ">
"2368
[; <" TRISE equ 0F96h ;# ">
"2373
[; <" DDRE equ 0F96h ;# ">
"2532
[; <" OSCTUNE equ 0F9Bh ;# ">
"2597
[; <" PIE1 equ 0F9Dh ;# ">
"2674
[; <" PIR1 equ 0F9Eh ;# ">
"2751
[; <" IPR1 equ 0F9Fh ;# ">
"2828
[; <" PIE2 equ 0FA0h ;# ">
"2894
[; <" PIR2 equ 0FA1h ;# ">
"2960
[; <" IPR2 equ 0FA2h ;# ">
"3026
[; <" EECON1 equ 0FA6h ;# ">
"3092
[; <" EECON2 equ 0FA7h ;# ">
"3099
[; <" EEDATA equ 0FA8h ;# ">
"3106
[; <" EEADR equ 0FA9h ;# ">
"3113
[; <" RCSTA equ 0FABh ;# ">
"3118
[; <" RCSTA1 equ 0FABh ;# ">
"3323
[; <" TXSTA equ 0FACh ;# ">
"3328
[; <" TXSTA1 equ 0FACh ;# ">
"3579
[; <" TXREG equ 0FADh ;# ">
"3584
[; <" TXREG1 equ 0FADh ;# ">
"3591
[; <" RCREG equ 0FAEh ;# ">
"3596
[; <" RCREG1 equ 0FAEh ;# ">
"3603
[; <" SPBRG equ 0FAFh ;# ">
"3608
[; <" SPBRG1 equ 0FAFh ;# ">
"3615
[; <" SPBRGH equ 0FB0h ;# ">
"3622
[; <" T3CON equ 0FB1h ;# ">
"3734
[; <" TMR3 equ 0FB2h ;# ">
"3741
[; <" TMR3L equ 0FB2h ;# ">
"3748
[; <" TMR3H equ 0FB3h ;# ">
"3755
[; <" CMCON equ 0FB4h ;# ">
"3845
[; <" CVRCON equ 0FB5h ;# ">
"3924
[; <" ECCP1AS equ 0FB6h ;# ">
"3929
[; <" ECCPAS equ 0FB6h ;# ">
"4086
[; <" PWM1CON equ 0FB7h ;# ">
"4091
[; <" ECCP1DEL equ 0FB7h ;# ">
"4224
[; <" BAUDCON equ 0FB8h ;# ">
"4229
[; <" BAUDCTL equ 0FB8h ;# ">
"4404
[; <" CCP2CON equ 0FBAh ;# ">
"4483
[; <" CCPR2 equ 0FBBh ;# ">
"4490
[; <" CCPR2L equ 0FBBh ;# ">
"4497
[; <" CCPR2H equ 0FBCh ;# ">
"4504
[; <" CCP1CON equ 0FBDh ;# ">
"4601
[; <" CCPR1 equ 0FBEh ;# ">
"4608
[; <" CCPR1L equ 0FBEh ;# ">
"4615
[; <" CCPR1H equ 0FBFh ;# ">
"4622
[; <" ADCON2 equ 0FC0h ;# ">
"4693
[; <" ADCON1 equ 0FC1h ;# ">
"4778
[; <" ADCON0 equ 0FC2h ;# ">
"4897
[; <" ADRES equ 0FC3h ;# ">
"4904
[; <" ADRESL equ 0FC3h ;# ">
"4911
[; <" ADRESH equ 0FC4h ;# ">
"4918
[; <" SSPCON2 equ 0FC5h ;# ">
"5013
[; <" SSPCON1 equ 0FC6h ;# ">
"5083
[; <" SSPSTAT equ 0FC7h ;# ">
"5304
[; <" SSPADD equ 0FC8h ;# ">
"5311
[; <" SSPBUF equ 0FC9h ;# ">
"5318
[; <" T2CON equ 0FCAh ;# ">
"5416
[; <" PR2 equ 0FCBh ;# ">
"5421
[; <" MEMCON equ 0FCBh ;# ">
"5526
[; <" TMR2 equ 0FCCh ;# ">
"5533
[; <" T1CON equ 0FCDh ;# ">
"5636
[; <" TMR1 equ 0FCEh ;# ">
"5643
[; <" TMR1L equ 0FCEh ;# ">
"5650
[; <" TMR1H equ 0FCFh ;# ">
"5657
[; <" RCON equ 0FD0h ;# ">
"5790
[; <" WDTCON equ 0FD1h ;# ">
"5818
[; <" HLVDCON equ 0FD2h ;# ">
"5823
[; <" LVDCON equ 0FD2h ;# ">
"6088
[; <" OSCCON equ 0FD3h ;# ">
"6171
[; <" T0CON equ 0FD5h ;# ">
"6254
[; <" TMR0 equ 0FD6h ;# ">
"6261
[; <" TMR0L equ 0FD6h ;# ">
"6268
[; <" TMR0H equ 0FD7h ;# ">
"6275
[; <" STATUS equ 0FD8h ;# ">
"6346
[; <" FSR2 equ 0FD9h ;# ">
"6353
[; <" FSR2L equ 0FD9h ;# ">
"6360
[; <" FSR2H equ 0FDAh ;# ">
"6367
[; <" PLUSW2 equ 0FDBh ;# ">
"6374
[; <" PREINC2 equ 0FDCh ;# ">
"6381
[; <" POSTDEC2 equ 0FDDh ;# ">
"6388
[; <" POSTINC2 equ 0FDEh ;# ">
"6395
[; <" INDF2 equ 0FDFh ;# ">
"6402
[; <" BSR equ 0FE0h ;# ">
"6409
[; <" FSR1 equ 0FE1h ;# ">
"6416
[; <" FSR1L equ 0FE1h ;# ">
"6423
[; <" FSR1H equ 0FE2h ;# ">
"6430
[; <" PLUSW1 equ 0FE3h ;# ">
"6437
[; <" PREINC1 equ 0FE4h ;# ">
"6444
[; <" POSTDEC1 equ 0FE5h ;# ">
"6451
[; <" POSTINC1 equ 0FE6h ;# ">
"6458
[; <" INDF1 equ 0FE7h ;# ">
"6465
[; <" WREG equ 0FE8h ;# ">
"6477
[; <" FSR0 equ 0FE9h ;# ">
"6484
[; <" FSR0L equ 0FE9h ;# ">
"6491
[; <" FSR0H equ 0FEAh ;# ">
"6498
[; <" PLUSW0 equ 0FEBh ;# ">
"6505
[; <" PREINC0 equ 0FECh ;# ">
"6512
[; <" POSTDEC0 equ 0FEDh ;# ">
"6519
[; <" POSTINC0 equ 0FEEh ;# ">
"6526
[; <" INDF0 equ 0FEFh ;# ">
"6533
[; <" INTCON3 equ 0FF0h ;# ">
"6625
[; <" INTCON2 equ 0FF1h ;# ">
"6695
[; <" INTCON equ 0FF2h ;# ">
"6812
[; <" PROD equ 0FF3h ;# ">
"6819
[; <" PRODL equ 0FF3h ;# ">
"6826
[; <" PRODH equ 0FF4h ;# ">
"6833
[; <" TABLAT equ 0FF5h ;# ">
"6842
[; <" TBLPTR equ 0FF6h ;# ">
"6849
[; <" TBLPTRL equ 0FF6h ;# ">
"6856
[; <" TBLPTRH equ 0FF7h ;# ">
"6863
[; <" TBLPTRU equ 0FF8h ;# ">
"6872
[; <" PCLAT equ 0FF9h ;# ">
"6879
[; <" PC equ 0FF9h ;# ">
"6886
[; <" PCL equ 0FF9h ;# ">
"6893
[; <" PCLATH equ 0FFAh ;# ">
"6900
[; <" PCLATU equ 0FFBh ;# ">
"6907
[; <" STKPTR equ 0FFCh ;# ">
"6981
[; <" TOS equ 0FFDh ;# ">
"6988
[; <" TOSL equ 0FFDh ;# ">
"6995
[; <" TOSH equ 0FFEh ;# ">
"7002
[; <" TOSU equ 0FFFh ;# ">
"16 mcal_layer/gpio_layer/../device_config.h
[p x OSC  =  RCIO6       ]
"17
[p x FCMEN  =  OFF       ]
"18
[p x IESO  =  OFF        ]
"21
[p x PWRT  =  OFF        ]
"22
[p x BOREN  =  SBORDIS   ]
"23
[p x BORV  =  3          ]
"26
[p x WDT  =  ON          ]
"27
[p x WDTPS  =  32768     ]
"30
[p x CCP2MX  =  PORTC    ]
"31
[p x PBADEN  =  OFF      ]
"32
[p x LPT1OSC  =  OFF     ]
"33
[p x MCLRE  =  ON        ]
"36
[p x STVREN  =  ON       ]
"37
[p x LVP  =  ON          ]
"38
[p x XINST  =  OFF       ]
"41
[p x CP0  =  OFF         ]
"42
[p x CP1  =  OFF         ]
"43
[p x CP2  =  OFF         ]
"44
[p x CP3  =  OFF         ]
"47
[p x CPB  =  OFF         ]
"48
[p x CPD  =  OFF         ]
"51
[p x WRT0  =  OFF        ]
"52
[p x WRT1  =  OFF        ]
"53
[p x WRT2  =  OFF        ]
"54
[p x WRT3  =  OFF        ]
"57
[p x WRTC  =  OFF        ]
"58
[p x WRTB  =  OFF        ]
"59
[p x WRTD  =  OFF        ]
"62
[p x EBTR0  =  OFF       ]
"63
[p x EBTR1  =  OFF       ]
"64
[p x EBTR2  =  OFF       ]
"65
[p x EBTR3  =  OFF       ]
"68
[p x EBTRB  =  OFF       ]
"2 mcal_layer/gpio_layer/hal_gpio.c
[; ;mcal_layer/gpio_layer/hal_gpio.c: 2: volatile uint8 *tris_register[]={&TRISA,&TRISB,&TRISC,&TRISD,&TRISE};
[v _tris_register `*Vuc ~T0 @X0 -> 5 `i e ]
[i _tris_register
:U ..
&U _TRISA
&U _TRISB
&U _TRISC
&U _TRISD
&U _TRISE
..
]
"3
[; ;mcal_layer/gpio_layer/hal_gpio.c: 3: volatile uint8 *lat_register[]={&LATA,&LATB,&LATC,&LATD,&LATE};
[v _lat_register `*Vuc ~T0 @X0 -> 5 `i e ]
[i _lat_register
:U ..
&U _LATA
&U _LATB
&U _LATC
&U _LATD
&U _LATE
..
]
"4
[; ;mcal_layer/gpio_layer/hal_gpio.c: 4: volatile uint8 *port_register[]={&PORTA,&PORTB,&PORTC,&PORTD,&PORTE};
[v _port_register `*Vuc ~T0 @X0 -> 5 `i e ]
[i _port_register
:U ..
&U _PORTA
&U _PORTB
&U _PORTC
&U _PORTD
&U _PORTE
..
]
"11
[; ;mcal_layer/gpio_layer/hal_gpio.c: 11: STD_ReturnType gpio_pin_direction_intialize(const pin_config_t *_pin_config){
[v _gpio_pin_direction_intialize `(uc ~T0 @X0 1 ef1`*CS283 ]
{
[e :U _gpio_pin_direction_intialize ]
[v __pin_config `*CS283 ~T0 @X0 1 r1 ]
[f ]
"12
[; ;mcal_layer/gpio_layer/hal_gpio.c: 12:     STD_ReturnType ret= (STD_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"13
[; ;mcal_layer/gpio_layer/hal_gpio.c: 13:     if(((void*)0) == _pin_config){
[e $ ! == -> -> -> 0 `i `*v `*CS283 __pin_config 285  ]
{
"14
[; ;mcal_layer/gpio_layer/hal_gpio.c: 14:         ret = (STD_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"15
[; ;mcal_layer/gpio_layer/hal_gpio.c: 15:     }
}
[e $U 286  ]
"16
[; ;mcal_layer/gpio_layer/hal_gpio.c: 16:     else{
[e :U 285 ]
{
"17
[; ;mcal_layer/gpio_layer/hal_gpio.c: 17:         switch(_pin_config->direction){
[e $U 288  ]
{
"18
[; ;mcal_layer/gpio_layer/hal_gpio.c: 18:             case output :
[e :U 289 ]
"19
[; ;mcal_layer/gpio_layer/hal_gpio.c: 19:                 (*tris_register[_pin_config->port] &= ~((uint8)1 << _pin_config->pin));
[e =& *U *U + &U _tris_register * -> . *U __pin_config 0 `ux -> -> # *U &U _tris_register `ui `ux -> ~ << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"20
[; ;mcal_layer/gpio_layer/hal_gpio.c: 20:                 break;
[e $U 287  ]
"21
[; ;mcal_layer/gpio_layer/hal_gpio.c: 21:             case input :
[e :U 290 ]
"22
[; ;mcal_layer/gpio_layer/hal_gpio.c: 22:                 (*tris_register[_pin_config->port] |= ((uint8)1 << _pin_config->pin));
[e =| *U *U + &U _tris_register * -> . *U __pin_config 0 `ux -> -> # *U &U _tris_register `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"23
[; ;mcal_layer/gpio_layer/hal_gpio.c: 23:                 break;
[e $U 287  ]
"24
[; ;mcal_layer/gpio_layer/hal_gpio.c: 24:             default : ret =(STD_ReturnType)0x00 ;
[e :U 291 ]
[e = _ret -> -> 0 `i `uc ]
"25
[; ;mcal_layer/gpio_layer/hal_gpio.c: 25:     }
}
[e $U 287  ]
[e :U 288 ]
[e [\ -> . *U __pin_config 2 `i , $ . `E2891 0 289
 , $ . `E2891 1 290
 291 ]
[e :U 287 ]
"26
[; ;mcal_layer/gpio_layer/hal_gpio.c: 26:     }
}
[e :U 286 ]
"28
[; ;mcal_layer/gpio_layer/hal_gpio.c: 28:     return ret;
[e ) _ret ]
[e $UE 284  ]
"29
[; ;mcal_layer/gpio_layer/hal_gpio.c: 29: }
[e :UE 284 ]
}
"38
[; ;mcal_layer/gpio_layer/hal_gpio.c: 38: STD_ReturnType gpio_pin_get_direction_status(const pin_config_t *_pin_config,direction_t *direction_status){
[v _gpio_pin_get_direction_status `(uc ~T0 @X0 1 ef2`*CS283`*E2891 ]
{
[e :U _gpio_pin_get_direction_status ]
[v __pin_config `*CS283 ~T0 @X0 1 r1 ]
[v _direction_status `*E2891 ~T0 @X0 1 r2 ]
[f ]
"39
[; ;mcal_layer/gpio_layer/hal_gpio.c: 39:     STD_ReturnType ret= (STD_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"40
[; ;mcal_layer/gpio_layer/hal_gpio.c: 40:     if(((void*)0)== _pin_config || ((void*)0) == direction_status || _pin_config->pin >8 -1){
[e $ ! || || == -> -> -> 0 `i `*v `*CS283 __pin_config == -> -> -> 0 `i `*v `*E2891 _direction_status > -> . *U __pin_config 1 `i - -> 8 `i -> 1 `i 293  ]
{
"41
[; ;mcal_layer/gpio_layer/hal_gpio.c: 41:         ret =(STD_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"42
[; ;mcal_layer/gpio_layer/hal_gpio.c: 42:     }
}
[e $U 294  ]
"43
[; ;mcal_layer/gpio_layer/hal_gpio.c: 43:     else
[e :U 293 ]
"44
[; ;mcal_layer/gpio_layer/hal_gpio.c: 44:     {
{
"45
[; ;mcal_layer/gpio_layer/hal_gpio.c: 45:         *direction_status =(*tris_register[_pin_config->port] >> _pin_config->pin & (uint8)1);
[e = *U _direction_status -> & >> -> *U *U + &U _tris_register * -> . *U __pin_config 0 `ux -> -> # *U &U _tris_register `ui `ux `i -> . *U __pin_config 1 `i -> -> -> 1 `i `uc `i `E2891 ]
"46
[; ;mcal_layer/gpio_layer/hal_gpio.c: 46:     }
}
[e :U 294 ]
"47
[; ;mcal_layer/gpio_layer/hal_gpio.c: 47:     return ret;
[e ) _ret ]
[e $UE 292  ]
"48
[; ;mcal_layer/gpio_layer/hal_gpio.c: 48: }
[e :UE 292 ]
}
"58
[; ;mcal_layer/gpio_layer/hal_gpio.c: 58: STD_ReturnType gpio_pin_write_logic(const pin_config_t *_pin_config,logic_t logic){
[v _gpio_pin_write_logic `(uc ~T0 @X0 1 ef2`*CS283`E2887 ]
{
[e :U _gpio_pin_write_logic ]
[v __pin_config `*CS283 ~T0 @X0 1 r1 ]
[v _logic `E2887 ~T0 @X0 1 r2 ]
[f ]
"59
[; ;mcal_layer/gpio_layer/hal_gpio.c: 59:  STD_ReturnType ret= (STD_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"60
[; ;mcal_layer/gpio_layer/hal_gpio.c: 60:     if( ((void*)0) == _pin_config ){
[e $ ! == -> -> -> 0 `i `*v `*CS283 __pin_config 296  ]
{
"61
[; ;mcal_layer/gpio_layer/hal_gpio.c: 61:         ret = (STD_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"62
[; ;mcal_layer/gpio_layer/hal_gpio.c: 62:     }
}
[e $U 297  ]
"63
[; ;mcal_layer/gpio_layer/hal_gpio.c: 63:     else{
[e :U 296 ]
{
"64
[; ;mcal_layer/gpio_layer/hal_gpio.c: 64:             switch(logic){
[e $U 299  ]
{
"65
[; ;mcal_layer/gpio_layer/hal_gpio.c: 65:                 case low:
[e :U 300 ]
"66
[; ;mcal_layer/gpio_layer/hal_gpio.c: 66:                     (*lat_register[_pin_config->port] &= ~((uint8)1 << _pin_config->pin));
[e =& *U *U + &U _lat_register * -> . *U __pin_config 0 `ux -> -> # *U &U _lat_register `ui `ux -> ~ << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"68
[; ;mcal_layer/gpio_layer/hal_gpio.c: 68:                     break;
[e $U 298  ]
"69
[; ;mcal_layer/gpio_layer/hal_gpio.c: 69:                 case high:
[e :U 301 ]
"70
[; ;mcal_layer/gpio_layer/hal_gpio.c: 70:                     (*lat_register[_pin_config->port] |= ((uint8)1 << _pin_config->pin));
[e =| *U *U + &U _lat_register * -> . *U __pin_config 0 `ux -> -> # *U &U _lat_register `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"72
[; ;mcal_layer/gpio_layer/hal_gpio.c: 72:                     break;
[e $U 298  ]
"73
[; ;mcal_layer/gpio_layer/hal_gpio.c: 73:                 default : ret = (STD_ReturnType)0x00;
[e :U 302 ]
[e = _ret -> -> 0 `i `uc ]
"74
[; ;mcal_layer/gpio_layer/hal_gpio.c: 74:             }
}
[e $U 298  ]
[e :U 299 ]
[e [\ -> _logic `ui , $ -> . `E2887 0 `ui 300
 , $ -> . `E2887 1 `ui 301
 302 ]
[e :U 298 ]
"76
[; ;mcal_layer/gpio_layer/hal_gpio.c: 76:     }
}
[e :U 297 ]
"77
[; ;mcal_layer/gpio_layer/hal_gpio.c: 77:         return ret;
[e ) _ret ]
[e $UE 295  ]
"79
[; ;mcal_layer/gpio_layer/hal_gpio.c: 79: }
[e :UE 295 ]
}
"90
[; ;mcal_layer/gpio_layer/hal_gpio.c: 90: STD_ReturnType gpio_pin_read_logic(const pin_config_t *_pin_config,logic_t *logic){
[v _gpio_pin_read_logic `(uc ~T0 @X0 1 ef2`*CS283`*E2887 ]
{
[e :U _gpio_pin_read_logic ]
[v __pin_config `*CS283 ~T0 @X0 1 r1 ]
[v _logic `*E2887 ~T0 @X0 1 r2 ]
[f ]
"91
[; ;mcal_layer/gpio_layer/hal_gpio.c: 91:     STD_ReturnType ret= (STD_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"92
[; ;mcal_layer/gpio_layer/hal_gpio.c: 92:         if( ( ((void*)0) == _pin_config ) || (((void*)0)== logic )){
[e $ ! || == -> -> -> 0 `i `*v `*CS283 __pin_config == -> -> -> 0 `i `*v `*E2887 _logic 304  ]
{
"93
[; ;mcal_layer/gpio_layer/hal_gpio.c: 93:         ret = (STD_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"94
[; ;mcal_layer/gpio_layer/hal_gpio.c: 94:     }
}
[e $U 305  ]
"95
[; ;mcal_layer/gpio_layer/hal_gpio.c: 95:     else{
[e :U 304 ]
{
"96
[; ;mcal_layer/gpio_layer/hal_gpio.c: 96:         *logic =(*port_register[_pin_config->port] >> _pin_config->pin & (uint8)1);
[e = *U _logic -> & >> -> *U *U + &U _port_register * -> . *U __pin_config 0 `ux -> -> # *U &U _port_register `ui `ux `i -> . *U __pin_config 1 `i -> -> -> 1 `i `uc `i `E2887 ]
"98
[; ;mcal_layer/gpio_layer/hal_gpio.c: 98:     }
}
[e :U 305 ]
"99
[; ;mcal_layer/gpio_layer/hal_gpio.c: 99:         return ret;
[e ) _ret ]
[e $UE 303  ]
"101
[; ;mcal_layer/gpio_layer/hal_gpio.c: 101: }
[e :UE 303 ]
}
"109
[; ;mcal_layer/gpio_layer/hal_gpio.c: 109: STD_ReturnType gpio_pin_toggle_logic(const pin_config_t *_pin_config){
[v _gpio_pin_toggle_logic `(uc ~T0 @X0 1 ef1`*CS283 ]
{
[e :U _gpio_pin_toggle_logic ]
[v __pin_config `*CS283 ~T0 @X0 1 r1 ]
[f ]
"110
[; ;mcal_layer/gpio_layer/hal_gpio.c: 110:     STD_ReturnType ret= (STD_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"111
[; ;mcal_layer/gpio_layer/hal_gpio.c: 111:         if(((void*)0) == _pin_config){
[e $ ! == -> -> -> 0 `i `*v `*CS283 __pin_config 307  ]
{
"112
[; ;mcal_layer/gpio_layer/hal_gpio.c: 112:         ret = (STD_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"113
[; ;mcal_layer/gpio_layer/hal_gpio.c: 113:     }
}
[e $U 308  ]
"114
[; ;mcal_layer/gpio_layer/hal_gpio.c: 114:     else{
[e :U 307 ]
{
"115
[; ;mcal_layer/gpio_layer/hal_gpio.c: 115:      (*lat_register[_pin_config->port] ^= ((uint8)1 << _pin_config->pin));
[e =^ *U *U + &U _lat_register * -> . *U __pin_config 0 `ux -> -> # *U &U _lat_register `ui `ux -> << -> -> -> 1 `i `uc `i -> . *U __pin_config 1 `i `uc ]
"116
[; ;mcal_layer/gpio_layer/hal_gpio.c: 116:     }
}
[e :U 308 ]
"117
[; ;mcal_layer/gpio_layer/hal_gpio.c: 117:         return ret;
[e ) _ret ]
[e $UE 306  ]
"119
[; ;mcal_layer/gpio_layer/hal_gpio.c: 119: }
[e :UE 306 ]
}
"123
[; ;mcal_layer/gpio_layer/hal_gpio.c: 123: STD_ReturnType gpio_pin_intialize(const pin_config_t *_pin_config){
[v _gpio_pin_intialize `(uc ~T0 @X0 1 ef1`*CS283 ]
{
[e :U _gpio_pin_intialize ]
[v __pin_config `*CS283 ~T0 @X0 1 r1 ]
[f ]
"124
[; ;mcal_layer/gpio_layer/hal_gpio.c: 124:         STD_ReturnType ret= (STD_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"125
[; ;mcal_layer/gpio_layer/hal_gpio.c: 125:         if(((void*)0) == _pin_config || _pin_config->pin > 8 -1){
[e $ ! || == -> -> -> 0 `i `*v `*CS283 __pin_config > -> . *U __pin_config 1 `i - -> 8 `i -> 1 `i 310  ]
{
"126
[; ;mcal_layer/gpio_layer/hal_gpio.c: 126:         ret = (STD_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"127
[; ;mcal_layer/gpio_layer/hal_gpio.c: 127:         }
}
[e $U 311  ]
"128
[; ;mcal_layer/gpio_layer/hal_gpio.c: 128:         else{
[e :U 310 ]
{
"129
[; ;mcal_layer/gpio_layer/hal_gpio.c: 129:             ret = gpio_pin_direction_intialize(_pin_config);
[e = _ret ( _gpio_pin_direction_intialize (1 __pin_config ]
"130
[; ;mcal_layer/gpio_layer/hal_gpio.c: 130:             ret = gpio_pin_write_logic(_pin_config, _pin_config->logic);
[e = _ret ( _gpio_pin_write_logic (2 , __pin_config -> . *U __pin_config 3 `E2887 ]
"131
[; ;mcal_layer/gpio_layer/hal_gpio.c: 131:         }
}
[e :U 311 ]
"132
[; ;mcal_layer/gpio_layer/hal_gpio.c: 132:         return ret;
[e ) _ret ]
[e $UE 309  ]
"134
[; ;mcal_layer/gpio_layer/hal_gpio.c: 134: }
[e :UE 309 ]
}
"138
[; ;mcal_layer/gpio_layer/hal_gpio.c: 138: STD_ReturnType gpio_port_direction_intialize(port_index_t port,uint8 direction){
[v _gpio_port_direction_intialize `(uc ~T0 @X0 1 ef2`E2905`uc ]
{
[e :U _gpio_port_direction_intialize ]
[v _port `E2905 ~T0 @X0 1 r1 ]
[v _direction `uc ~T0 @X0 1 r2 ]
[f ]
"139
[; ;mcal_layer/gpio_layer/hal_gpio.c: 139:     STD_ReturnType ret= (STD_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"140
[; ;mcal_layer/gpio_layer/hal_gpio.c: 140:     if(port > 5 -1){
[e $ ! > -> _port `ui -> - -> 5 `i -> 1 `i `ui 313  ]
{
"141
[; ;mcal_layer/gpio_layer/hal_gpio.c: 141:         ret = (STD_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"142
[; ;mcal_layer/gpio_layer/hal_gpio.c: 142:     }
}
[e $U 314  ]
"143
[; ;mcal_layer/gpio_layer/hal_gpio.c: 143:     else
[e :U 313 ]
"144
[; ;mcal_layer/gpio_layer/hal_gpio.c: 144:     {
{
"145
[; ;mcal_layer/gpio_layer/hal_gpio.c: 145:         *tris_register[port] = direction;
[e = *U *U + &U _tris_register * -> _port `ux -> -> # *U &U _tris_register `ui `ux _direction ]
"146
[; ;mcal_layer/gpio_layer/hal_gpio.c: 146:     }
}
[e :U 314 ]
"148
[; ;mcal_layer/gpio_layer/hal_gpio.c: 148:     return ret;
[e ) _ret ]
[e $UE 312  ]
"149
[; ;mcal_layer/gpio_layer/hal_gpio.c: 149: }
[e :UE 312 ]
}
"158
[; ;mcal_layer/gpio_layer/hal_gpio.c: 158: STD_ReturnType gpio_port_get_direction_status(port_index_t port,uint8 *direction_status){
[v _gpio_port_get_direction_status `(uc ~T0 @X0 1 ef2`E2905`*uc ]
{
[e :U _gpio_port_get_direction_status ]
[v _port `E2905 ~T0 @X0 1 r1 ]
[v _direction_status `*uc ~T0 @X0 1 r2 ]
[f ]
"159
[; ;mcal_layer/gpio_layer/hal_gpio.c: 159:     STD_ReturnType ret= (STD_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"160
[; ;mcal_layer/gpio_layer/hal_gpio.c: 160:         if((((void*)0)== direction_status )){
[e $ ! == -> -> -> 0 `i `*v `*uc _direction_status 316  ]
{
"161
[; ;mcal_layer/gpio_layer/hal_gpio.c: 161:         ret = (STD_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"162
[; ;mcal_layer/gpio_layer/hal_gpio.c: 162:     }
}
[e $U 317  ]
"163
[; ;mcal_layer/gpio_layer/hal_gpio.c: 163:     else{
[e :U 316 ]
{
"164
[; ;mcal_layer/gpio_layer/hal_gpio.c: 164:             ret = *tris_register[port];
[e = _ret *U *U + &U _tris_register * -> _port `ux -> -> # *U &U _tris_register `ui `ux ]
"165
[; ;mcal_layer/gpio_layer/hal_gpio.c: 165:     }
}
[e :U 317 ]
"166
[; ;mcal_layer/gpio_layer/hal_gpio.c: 166:         return ret;
[e ) _ret ]
[e $UE 315  ]
"168
[; ;mcal_layer/gpio_layer/hal_gpio.c: 168: }
[e :UE 315 ]
}
"173
[; ;mcal_layer/gpio_layer/hal_gpio.c: 173: STD_ReturnType gpio_port_write_logic(port_index_t port,uint8 logic){
[v _gpio_port_write_logic `(uc ~T0 @X0 1 ef2`E2905`uc ]
{
[e :U _gpio_port_write_logic ]
[v _port `E2905 ~T0 @X0 1 r1 ]
[v _logic `uc ~T0 @X0 1 r2 ]
[f ]
"174
[; ;mcal_layer/gpio_layer/hal_gpio.c: 174:     STD_ReturnType ret= (STD_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"175
[; ;mcal_layer/gpio_layer/hal_gpio.c: 175:     if(port >5 -1){
[e $ ! > -> _port `ui -> - -> 5 `i -> 1 `i `ui 319  ]
{
"176
[; ;mcal_layer/gpio_layer/hal_gpio.c: 176:         ret =(STD_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"177
[; ;mcal_layer/gpio_layer/hal_gpio.c: 177:     }
}
[e $U 320  ]
"178
[; ;mcal_layer/gpio_layer/hal_gpio.c: 178:     else{
[e :U 319 ]
{
"179
[; ;mcal_layer/gpio_layer/hal_gpio.c: 179:         *lat_register[port]=logic;
[e = *U *U + &U _lat_register * -> _port `ux -> -> # *U &U _lat_register `ui `ux _logic ]
"180
[; ;mcal_layer/gpio_layer/hal_gpio.c: 180:     }
}
[e :U 320 ]
"181
[; ;mcal_layer/gpio_layer/hal_gpio.c: 181:     return ret;
[e ) _ret ]
[e $UE 318  ]
"182
[; ;mcal_layer/gpio_layer/hal_gpio.c: 182: }
[e :UE 318 ]
}
"189
[; ;mcal_layer/gpio_layer/hal_gpio.c: 189: STD_ReturnType gpio_port_read_logic(port_index_t port,uint8 *logic){
[v _gpio_port_read_logic `(uc ~T0 @X0 1 ef2`E2905`*uc ]
{
[e :U _gpio_port_read_logic ]
[v _port `E2905 ~T0 @X0 1 r1 ]
[v _logic `*uc ~T0 @X0 1 r2 ]
[f ]
"190
[; ;mcal_layer/gpio_layer/hal_gpio.c: 190:     STD_ReturnType ret= (STD_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"191
[; ;mcal_layer/gpio_layer/hal_gpio.c: 191:     if((((void*)0)==logic) && (port >5 -1)){
[e $ ! && == -> -> -> 0 `i `*v `*uc _logic > -> _port `ui -> - -> 5 `i -> 1 `i `ui 322  ]
{
"192
[; ;mcal_layer/gpio_layer/hal_gpio.c: 192:         ret =(STD_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"193
[; ;mcal_layer/gpio_layer/hal_gpio.c: 193:     }
}
[e $U 323  ]
"194
[; ;mcal_layer/gpio_layer/hal_gpio.c: 194:     else{
[e :U 322 ]
{
"195
[; ;mcal_layer/gpio_layer/hal_gpio.c: 195:         *logic=*lat_register[port];
[e = *U _logic *U *U + &U _lat_register * -> _port `ux -> -> # *U &U _lat_register `ui `ux ]
"196
[; ;mcal_layer/gpio_layer/hal_gpio.c: 196:     }
}
[e :U 323 ]
"197
[; ;mcal_layer/gpio_layer/hal_gpio.c: 197:     return ret;
[e ) _ret ]
[e $UE 321  ]
"198
[; ;mcal_layer/gpio_layer/hal_gpio.c: 198: }
[e :UE 321 ]
}
"203
[; ;mcal_layer/gpio_layer/hal_gpio.c: 203: STD_ReturnType gpio_port_toggle_logic(port_index_t port){
[v _gpio_port_toggle_logic `(uc ~T0 @X0 1 ef1`E2905 ]
{
[e :U _gpio_port_toggle_logic ]
[v _port `E2905 ~T0 @X0 1 r1 ]
[f ]
"204
[; ;mcal_layer/gpio_layer/hal_gpio.c: 204:       STD_ReturnType ret= (STD_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"205
[; ;mcal_layer/gpio_layer/hal_gpio.c: 205:     if(port >5 -1){
[e $ ! > -> _port `ui -> - -> 5 `i -> 1 `i `ui 325  ]
{
"206
[; ;mcal_layer/gpio_layer/hal_gpio.c: 206:         ret =(STD_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"207
[; ;mcal_layer/gpio_layer/hal_gpio.c: 207:     }
}
[e $U 326  ]
"208
[; ;mcal_layer/gpio_layer/hal_gpio.c: 208:     else{
[e :U 325 ]
{
"209
[; ;mcal_layer/gpio_layer/hal_gpio.c: 209:         *lat_register[port]^=0xff;
[e =^ *U *U + &U _lat_register * -> _port `ux -> -> # *U &U _lat_register `ui `ux -> -> 255 `i `uc ]
"210
[; ;mcal_layer/gpio_layer/hal_gpio.c: 210:     }
}
[e :U 326 ]
"211
[; ;mcal_layer/gpio_layer/hal_gpio.c: 211:     return ret;
[e ) _ret ]
[e $UE 324  ]
"212
[; ;mcal_layer/gpio_layer/hal_gpio.c: 212: }
[e :UE 324 ]
}
