Version 4.0 HI-TECH Software Intermediate Code
"60 ecu_layer/../mcal_layer/gpio_layer/hal_gpio.h
[; ;ecu_layer/../mcal_layer/gpio_layer/hal_gpio.h: 60: typedef struct {
[s S283 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S283 . port pin direction logic ]
"22 ecu_layer/ecu_keypad.h
[; ;ecu_layer/ecu_keypad.h: 22: typedef struct{
[s S284 `S283 -> 4 `i `S283 -> 4 `i ]
[n S284 . ecu_keypad_row_pins ecu_keypad_columns_pins ]
"73 ecu_layer/../mcal_layer/gpio_layer/hal_gpio.h
[; ;ecu_layer/../mcal_layer/gpio_layer/hal_gpio.h: 73: STD_ReturnType gpio_pin_intialize(const pin_config_t *_pin_config);
[v _gpio_pin_intialize `(uc ~T0 @X0 0 ef1`*CS283 ]
"55 ecu_layer/ecu_keypad.c
[; ;ecu_layer/ecu_keypad.c: 55:                ret = gpio_pin_write_logic(&(_keypad_obj->ecu_keypad_row_pins[counter]),low);
[c E2887 0 1 .. ]
[n E2887 . low high  ]
"70 ecu_layer/../mcal_layer/gpio_layer/hal_gpio.h
[; ;ecu_layer/../mcal_layer/gpio_layer/hal_gpio.h: 70: STD_ReturnType gpio_pin_write_logic(const pin_config_t *_pin_config,logic_t logic);
[v _gpio_pin_write_logic `(uc ~T0 @X0 0 ef2`*CS283`E2887 ]
[v F2544 `(v ~T0 @X0 1 tf1`ul ]
"12 C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\builtins.h
[v __delay `JF2544 ~T0 @X0 0 e ]
[p i __delay ]
"71 ecu_layer/../mcal_layer/gpio_layer/hal_gpio.h
[; ;ecu_layer/../mcal_layer/gpio_layer/hal_gpio.h: 71: STD_ReturnType gpio_pin_read_logic(const pin_config_t *_pin_config,logic_t *logic);
[v _gpio_pin_read_logic `(uc ~T0 @X0 0 ef2`*CS283`*E2887 ]
"55 C:/Program Files/Microchip/MPLABX/v6.00/packs/Microchip/PIC18Fxxxx_DFP/1.3.36/xc8\pic\include\proc\pic18f4520.h
[; <" PORTA equ 0F80h ;# ">
"274
[; <" PORTB equ 0F81h ;# ">
"453
[; <" PORTC equ 0F82h ;# ">
"635
[; <" PORTD equ 0F83h ;# ">
"777
[; <" PORTE equ 0F84h ;# ">
"980
[; <" LATA equ 0F89h ;# ">
"1092
[; <" LATB equ 0F8Ah ;# ">
"1204
[; <" LATC equ 0F8Bh ;# ">
"1316
[; <" LATD equ 0F8Ch ;# ">
"1428
[; <" LATE equ 0F8Dh ;# ">
"1480
[; <" TRISA equ 0F92h ;# ">
"1485
[; <" DDRA equ 0F92h ;# ">
"1702
[; <" TRISB equ 0F93h ;# ">
"1707
[; <" DDRB equ 0F93h ;# ">
"1924
[; <" TRISC equ 0F94h ;# ">
"1929
[; <" DDRC equ 0F94h ;# ">
"2146
[; <" TRISD equ 0F95h ;# ">
"2151
[; <" DDRD equ 0F95h ;# ">
"2368
[; <" TRISE equ 0F96h ;# ">
"2373
[; <" DDRE equ 0F96h ;# ">
"2532
[; <" OSCTUNE equ 0F9Bh ;# ">
"2597
[; <" PIE1 equ 0F9Dh ;# ">
"2674
[; <" PIR1 equ 0F9Eh ;# ">
"2751
[; <" IPR1 equ 0F9Fh ;# ">
"2828
[; <" PIE2 equ 0FA0h ;# ">
"2894
[; <" PIR2 equ 0FA1h ;# ">
"2960
[; <" IPR2 equ 0FA2h ;# ">
"3026
[; <" EECON1 equ 0FA6h ;# ">
"3092
[; <" EECON2 equ 0FA7h ;# ">
"3099
[; <" EEDATA equ 0FA8h ;# ">
"3106
[; <" EEADR equ 0FA9h ;# ">
"3113
[; <" RCSTA equ 0FABh ;# ">
"3118
[; <" RCSTA1 equ 0FABh ;# ">
"3323
[; <" TXSTA equ 0FACh ;# ">
"3328
[; <" TXSTA1 equ 0FACh ;# ">
"3579
[; <" TXREG equ 0FADh ;# ">
"3584
[; <" TXREG1 equ 0FADh ;# ">
"3591
[; <" RCREG equ 0FAEh ;# ">
"3596
[; <" RCREG1 equ 0FAEh ;# ">
"3603
[; <" SPBRG equ 0FAFh ;# ">
"3608
[; <" SPBRG1 equ 0FAFh ;# ">
"3615
[; <" SPBRGH equ 0FB0h ;# ">
"3622
[; <" T3CON equ 0FB1h ;# ">
"3734
[; <" TMR3 equ 0FB2h ;# ">
"3741
[; <" TMR3L equ 0FB2h ;# ">
"3748
[; <" TMR3H equ 0FB3h ;# ">
"3755
[; <" CMCON equ 0FB4h ;# ">
"3845
[; <" CVRCON equ 0FB5h ;# ">
"3924
[; <" ECCP1AS equ 0FB6h ;# ">
"3929
[; <" ECCPAS equ 0FB6h ;# ">
"4086
[; <" PWM1CON equ 0FB7h ;# ">
"4091
[; <" ECCP1DEL equ 0FB7h ;# ">
"4224
[; <" BAUDCON equ 0FB8h ;# ">
"4229
[; <" BAUDCTL equ 0FB8h ;# ">
"4404
[; <" CCP2CON equ 0FBAh ;# ">
"4483
[; <" CCPR2 equ 0FBBh ;# ">
"4490
[; <" CCPR2L equ 0FBBh ;# ">
"4497
[; <" CCPR2H equ 0FBCh ;# ">
"4504
[; <" CCP1CON equ 0FBDh ;# ">
"4601
[; <" CCPR1 equ 0FBEh ;# ">
"4608
[; <" CCPR1L equ 0FBEh ;# ">
"4615
[; <" CCPR1H equ 0FBFh ;# ">
"4622
[; <" ADCON2 equ 0FC0h ;# ">
"4693
[; <" ADCON1 equ 0FC1h ;# ">
"4778
[; <" ADCON0 equ 0FC2h ;# ">
"4897
[; <" ADRES equ 0FC3h ;# ">
"4904
[; <" ADRESL equ 0FC3h ;# ">
"4911
[; <" ADRESH equ 0FC4h ;# ">
"4918
[; <" SSPCON2 equ 0FC5h ;# ">
"5013
[; <" SSPCON1 equ 0FC6h ;# ">
"5083
[; <" SSPSTAT equ 0FC7h ;# ">
"5304
[; <" SSPADD equ 0FC8h ;# ">
"5311
[; <" SSPBUF equ 0FC9h ;# ">
"5318
[; <" T2CON equ 0FCAh ;# ">
"5416
[; <" PR2 equ 0FCBh ;# ">
"5421
[; <" MEMCON equ 0FCBh ;# ">
"5526
[; <" TMR2 equ 0FCCh ;# ">
"5533
[; <" T1CON equ 0FCDh ;# ">
"5636
[; <" TMR1 equ 0FCEh ;# ">
"5643
[; <" TMR1L equ 0FCEh ;# ">
"5650
[; <" TMR1H equ 0FCFh ;# ">
"5657
[; <" RCON equ 0FD0h ;# ">
"5790
[; <" WDTCON equ 0FD1h ;# ">
"5818
[; <" HLVDCON equ 0FD2h ;# ">
"5823
[; <" LVDCON equ 0FD2h ;# ">
"6088
[; <" OSCCON equ 0FD3h ;# ">
"6171
[; <" T0CON equ 0FD5h ;# ">
"6254
[; <" TMR0 equ 0FD6h ;# ">
"6261
[; <" TMR0L equ 0FD6h ;# ">
"6268
[; <" TMR0H equ 0FD7h ;# ">
"6275
[; <" STATUS equ 0FD8h ;# ">
"6346
[; <" FSR2 equ 0FD9h ;# ">
"6353
[; <" FSR2L equ 0FD9h ;# ">
"6360
[; <" FSR2H equ 0FDAh ;# ">
"6367
[; <" PLUSW2 equ 0FDBh ;# ">
"6374
[; <" PREINC2 equ 0FDCh ;# ">
"6381
[; <" POSTDEC2 equ 0FDDh ;# ">
"6388
[; <" POSTINC2 equ 0FDEh ;# ">
"6395
[; <" INDF2 equ 0FDFh ;# ">
"6402
[; <" BSR equ 0FE0h ;# ">
"6409
[; <" FSR1 equ 0FE1h ;# ">
"6416
[; <" FSR1L equ 0FE1h ;# ">
"6423
[; <" FSR1H equ 0FE2h ;# ">
"6430
[; <" PLUSW1 equ 0FE3h ;# ">
"6437
[; <" PREINC1 equ 0FE4h ;# ">
"6444
[; <" POSTDEC1 equ 0FE5h ;# ">
"6451
[; <" POSTINC1 equ 0FE6h ;# ">
"6458
[; <" INDF1 equ 0FE7h ;# ">
"6465
[; <" WREG equ 0FE8h ;# ">
"6477
[; <" FSR0 equ 0FE9h ;# ">
"6484
[; <" FSR0L equ 0FE9h ;# ">
"6491
[; <" FSR0H equ 0FEAh ;# ">
"6498
[; <" PLUSW0 equ 0FEBh ;# ">
"6505
[; <" PREINC0 equ 0FECh ;# ">
"6512
[; <" POSTDEC0 equ 0FEDh ;# ">
"6519
[; <" POSTINC0 equ 0FEEh ;# ">
"6526
[; <" INDF0 equ 0FEFh ;# ">
"6533
[; <" INTCON3 equ 0FF0h ;# ">
"6625
[; <" INTCON2 equ 0FF1h ;# ">
"6695
[; <" INTCON equ 0FF2h ;# ">
"6812
[; <" PROD equ 0FF3h ;# ">
"6819
[; <" PRODL equ 0FF3h ;# ">
"6826
[; <" PRODH equ 0FF4h ;# ">
"6833
[; <" TABLAT equ 0FF5h ;# ">
"6842
[; <" TBLPTR equ 0FF6h ;# ">
"6849
[; <" TBLPTRL equ 0FF6h ;# ">
"6856
[; <" TBLPTRH equ 0FF7h ;# ">
"6863
[; <" TBLPTRU equ 0FF8h ;# ">
"6872
[; <" PCLAT equ 0FF9h ;# ">
"6879
[; <" PC equ 0FF9h ;# ">
"6886
[; <" PCL equ 0FF9h ;# ">
"6893
[; <" PCLATH equ 0FFAh ;# ">
"6900
[; <" PCLATU equ 0FFBh ;# ">
"6907
[; <" STKPTR equ 0FFCh ;# ">
"6981
[; <" TOS equ 0FFDh ;# ">
"6988
[; <" TOSL equ 0FFDh ;# ">
"6995
[; <" TOSH equ 0FFEh ;# ">
"7002
[; <" TOSU equ 0FFFh ;# ">
"16 ecu_layer/../mcal_layer/gpio_layer/../device_config.h
[p x OSC  =  RCIO6       ]
"17
[p x FCMEN  =  OFF       ]
"18
[p x IESO  =  OFF        ]
"21
[p x PWRT  =  OFF        ]
"22
[p x BOREN  =  SBORDIS   ]
"23
[p x BORV  =  3          ]
"26
[p x WDT  =  ON          ]
"27
[p x WDTPS  =  32768     ]
"30
[p x CCP2MX  =  PORTC    ]
"31
[p x PBADEN  =  OFF      ]
"32
[p x LPT1OSC  =  OFF     ]
"33
[p x MCLRE  =  ON        ]
"36
[p x STVREN  =  ON       ]
"37
[p x LVP  =  ON          ]
"38
[p x XINST  =  OFF       ]
"41
[p x CP0  =  OFF         ]
"42
[p x CP1  =  OFF         ]
"43
[p x CP2  =  OFF         ]
"44
[p x CP3  =  OFF         ]
"47
[p x CPB  =  OFF         ]
"48
[p x CPD  =  OFF         ]
"51
[p x WRT0  =  OFF        ]
"52
[p x WRT1  =  OFF        ]
"53
[p x WRT2  =  OFF        ]
"54
[p x WRT3  =  OFF        ]
"57
[p x WRTC  =  OFF        ]
"58
[p x WRTB  =  OFF        ]
"59
[p x WRTD  =  OFF        ]
"62
[p x EBTR0  =  OFF       ]
"63
[p x EBTR1  =  OFF       ]
"64
[p x EBTR2  =  OFF       ]
"65
[p x EBTR3  =  OFF       ]
"68
[p x EBTRB  =  OFF       ]
[v F2957 `Cuc ~T0 @X0 -> 4 `i t ]
"2 ecu_layer/ecu_keypad.c
[; ;ecu_layer/ecu_keypad.c: 2: static const uint8 btn_values[4][4] ={
[v _btn_values `F2957 ~T0 @X0 -> 4 `i s ]
[i _btn_values
:U ..
:U ..
-> -> 55 `ui `uc
-> -> 56 `ui `uc
-> -> 57 `ui `uc
-> -> 47 `ui `uc
..
:U ..
-> -> 52 `ui `uc
-> -> 53 `ui `uc
-> -> 54 `ui `uc
-> -> 42 `ui `uc
..
:U ..
-> -> 49 `ui `uc
-> -> 50 `ui `uc
-> -> 51 `ui `uc
-> -> 45 `ui `uc
..
:U ..
-> -> 99 `ui `uc
-> -> 48 `ui `uc
-> -> 61 `ui `uc
-> -> 43 `ui `uc
..
..
]
"15
[; ;ecu_layer/ecu_keypad.c: 15: STD_ReturnType keypad_intialize(const keypad_t *_keypad_obj){
[v _keypad_intialize `(uc ~T0 @X0 1 ef1`*CS284 ]
{
[e :U _keypad_intialize ]
[v __keypad_obj `*CS284 ~T0 @X0 1 r1 ]
[f ]
"16
[; ;ecu_layer/ecu_keypad.c: 16:     STD_ReturnType ret = (STD_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"17
[; ;ecu_layer/ecu_keypad.c: 17:     uint8 rows_counter=0,columns_counter=0;
[v _rows_counter `uc ~T0 @X0 1 a ]
[e = _rows_counter -> -> 0 `i `uc ]
[v _columns_counter `uc ~T0 @X0 1 a ]
[e = _columns_counter -> -> 0 `i `uc ]
"18
[; ;ecu_layer/ecu_keypad.c: 18:     if(((void*)0) == _keypad_obj)
[e $ ! == -> -> -> 0 `i `*v `*CS284 __keypad_obj 286  ]
"19
[; ;ecu_layer/ecu_keypad.c: 19:     {
{
"20
[; ;ecu_layer/ecu_keypad.c: 20:         ret = (STD_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"22
[; ;ecu_layer/ecu_keypad.c: 22:     }
}
[e $U 287  ]
"23
[; ;ecu_layer/ecu_keypad.c: 23:     else{
[e :U 286 ]
{
"24
[; ;ecu_layer/ecu_keypad.c: 24:         for(rows_counter=0;rows_counter<4;rows_counter++){
{
[e = _rows_counter -> -> 0 `i `uc ]
[e $ < -> _rows_counter `i -> 4 `i 288  ]
[e $U 289  ]
[e :U 288 ]
{
"25
[; ;ecu_layer/ecu_keypad.c: 25:             ret = gpio_pin_intialize(&(_keypad_obj->ecu_keypad_row_pins[rows_counter]));
[e = _ret ( _gpio_pin_intialize (1 &U *U + &U . *U __keypad_obj 0 * -> _rows_counter `ux -> -> # *U &U . *U __keypad_obj 0 `ui `ux ]
"26
[; ;ecu_layer/ecu_keypad.c: 26:             for(columns_counter=0;columns_counter<4;columns_counter++){
{
[e = _columns_counter -> -> 0 `i `uc ]
[e $ < -> _columns_counter `i -> 4 `i 291  ]
[e $U 292  ]
[e :U 291 ]
{
"27
[; ;ecu_layer/ecu_keypad.c: 27:                 ret = gpio_pin_intialize(&(_keypad_obj->ecu_keypad_columns_pins[columns_counter]));
[e = _ret ( _gpio_pin_intialize (1 &U *U + &U . *U __keypad_obj 1 * -> _columns_counter `ux -> -> # *U &U . *U __keypad_obj 1 `ui `ux ]
"29
[; ;ecu_layer/ecu_keypad.c: 29:             }
}
[e ++ _columns_counter -> -> 1 `i `uc ]
[e $ < -> _columns_counter `i -> 4 `i 291  ]
[e :U 292 ]
}
"31
[; ;ecu_layer/ecu_keypad.c: 31:         }
}
[e ++ _rows_counter -> -> 1 `i `uc ]
[e $ < -> _rows_counter `i -> 4 `i 288  ]
[e :U 289 ]
}
"33
[; ;ecu_layer/ecu_keypad.c: 33:     }
}
[e :U 287 ]
"35
[; ;ecu_layer/ecu_keypad.c: 35:     return ret;
[e ) _ret ]
[e $UE 285  ]
"36
[; ;ecu_layer/ecu_keypad.c: 36: }
[e :UE 285 ]
}
"43
[; ;ecu_layer/ecu_keypad.c: 43: STD_ReturnType keypad_get_value(const keypad_t *_keypad_obj,uint8 *value){
[v _keypad_get_value `(uc ~T0 @X0 1 ef2`*CS284`*uc ]
{
[e :U _keypad_get_value ]
[v __keypad_obj `*CS284 ~T0 @X0 1 r1 ]
[v _value `*uc ~T0 @X0 1 r2 ]
[f ]
"44
[; ;ecu_layer/ecu_keypad.c: 44:     STD_ReturnType ret = (STD_ReturnType)0x01;
[v _ret `uc ~T0 @X0 1 a ]
[e = _ret -> -> 1 `i `uc ]
"45
[; ;ecu_layer/ecu_keypad.c: 45:     uint8 rows_counter=0,columns_counter=0;
[v _rows_counter `uc ~T0 @X0 1 a ]
[e = _rows_counter -> -> 0 `i `uc ]
[v _columns_counter `uc ~T0 @X0 1 a ]
[e = _columns_counter -> -> 0 `i `uc ]
"46
[; ;ecu_layer/ecu_keypad.c: 46:     uint8 counter= 0;
[v _counter `uc ~T0 @X0 1 a ]
[e = _counter -> -> 0 `i `uc ]
"47
[; ;ecu_layer/ecu_keypad.c: 47:     uint8 column_logic=0;
[v _column_logic `uc ~T0 @X0 1 a ]
[e = _column_logic -> -> 0 `i `uc ]
"48
[; ;ecu_layer/ecu_keypad.c: 48:     if((((void*)0) == _keypad_obj) || (((void*)0) == value))
[e $ ! || == -> -> -> 0 `i `*v `*CS284 __keypad_obj == -> -> -> 0 `i `*v `*uc _value 295  ]
"49
[; ;ecu_layer/ecu_keypad.c: 49:     {
{
"50
[; ;ecu_layer/ecu_keypad.c: 50:         ret = (STD_ReturnType)0x00;
[e = _ret -> -> 0 `i `uc ]
"51
[; ;ecu_layer/ecu_keypad.c: 51:     }
}
[e $U 296  ]
"52
[; ;ecu_layer/ecu_keypad.c: 52:     else{
[e :U 295 ]
{
"53
[; ;ecu_layer/ecu_keypad.c: 53:          for(rows_counter=0;rows_counter<4;rows_counter++){
{
[e = _rows_counter -> -> 0 `i `uc ]
[e $ < -> _rows_counter `i -> 4 `i 297  ]
[e $U 298  ]
[e :U 297 ]
{
"54
[; ;ecu_layer/ecu_keypad.c: 54:             for(counter=0;counter<4;counter++){
{
[e = _counter -> -> 0 `i `uc ]
[e $ < -> _counter `i -> 4 `i 300  ]
[e $U 301  ]
[e :U 300 ]
{
"55
[; ;ecu_layer/ecu_keypad.c: 55:                ret = gpio_pin_write_logic(&(_keypad_obj->ecu_keypad_row_pins[counter]),low);
[e = _ret ( _gpio_pin_write_logic (2 , &U *U + &U . *U __keypad_obj 0 * -> _counter `ux -> -> # *U &U . *U __keypad_obj 0 `ui `ux . `E2887 0 ]
"56
[; ;ecu_layer/ecu_keypad.c: 56:             }
}
[e ++ _counter -> -> 1 `i `uc ]
[e $ < -> _counter `i -> 4 `i 300  ]
[e :U 301 ]
}
"57
[; ;ecu_layer/ecu_keypad.c: 57:             gpio_pin_write_logic(&(_keypad_obj->ecu_keypad_row_pins[rows_counter]),high);
[e ( _gpio_pin_write_logic (2 , &U *U + &U . *U __keypad_obj 0 * -> _rows_counter `ux -> -> # *U &U . *U __keypad_obj 0 `ui `ux . `E2887 1 ]
"58
[; ;ecu_layer/ecu_keypad.c: 58:             _delay((unsigned long)((10)*(8000000UL/4000.0)));
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 8000000 `ul `d .4000.0 `ul ]
"59
[; ;ecu_layer/ecu_keypad.c: 59:             for(columns_counter=0;columns_counter<4;columns_counter++){
{
[e = _columns_counter -> -> 0 `i `uc ]
[e $ < -> _columns_counter `i -> 4 `i 303  ]
[e $U 304  ]
[e :U 303 ]
{
"60
[; ;ecu_layer/ecu_keypad.c: 60:                 ret = gpio_pin_read_logic(&(_keypad_obj->ecu_keypad_columns_pins[columns_counter]),&column_logic);
[e = _ret ( _gpio_pin_read_logic (2 , &U *U + &U . *U __keypad_obj 1 * -> _columns_counter `ux -> -> # *U &U . *U __keypad_obj 1 `ui `ux -> &U _column_logic `*E2887 ]
"61
[; ;ecu_layer/ecu_keypad.c: 61:                 if(high == column_logic ){
[e $ ! == -> . `E2887 1 `i -> _column_logic `i 306  ]
{
"62
[; ;ecu_layer/ecu_keypad.c: 62:                     *value = btn_values[rows_counter][columns_counter];
[e = *U _value *U + &U *U + &U _btn_values * -> _rows_counter `ux -> * -> # *U &U *U &U _btn_values `ui -> -> 4 `i `ui `ux * -> _columns_counter `ux -> -> # *U &U *U + &U _btn_values * -> _rows_counter `ux -> * -> # *U &U *U &U _btn_values `ui -> -> 4 `i `ui `ux `ui `ux ]
"64
[; ;ecu_layer/ecu_keypad.c: 64:                 }
}
[e :U 306 ]
"65
[; ;ecu_layer/ecu_keypad.c: 65:             }}
}
[e ++ _columns_counter -> -> 1 `i `uc ]
[e $ < -> _columns_counter `i -> 4 `i 303  ]
[e :U 304 ]
}
}
[e ++ _rows_counter -> -> 1 `i `uc ]
[e $ < -> _rows_counter `i -> 4 `i 297  ]
[e :U 298 ]
}
"67
[; ;ecu_layer/ecu_keypad.c: 67:     }
}
[e :U 296 ]
"69
[; ;ecu_layer/ecu_keypad.c: 69:     return ret;
[e ) _ret ]
[e $UE 294  ]
"73
[; ;ecu_layer/ecu_keypad.c: 73: }
[e :UE 294 ]
}
